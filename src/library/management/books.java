/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package library.management;

import com.itextpdf.text.Document;
import com.itextpdf.text.DocumentException;
import com.itextpdf.text.pdf.PdfPTable;
import com.itextpdf.text.pdf.PdfWriter;
import java.awt.HeadlessException;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author Codiator
 */
public class books extends javax.swing.JFrame {

    /**
     * Creates new form books
     */
    String bb,aa;
    Object qq;
    private Object pdfWriter;
    public books(String aaa, String bbb) {
        initComponents();
         aa=aaa;
        bb=bbb;
        b1.setVisible(false);
        show_user();
        
        TableColumnModel modelcol = tb1.getColumnModel();
        TableModel model = tb1.getModel();
        int total= modelcol.getColumnCount();
        for(int i=0;i<total;i++)
        {
            int ta=0;
            int total2 = model.getRowCount();
            for(int j=0;j<total2;j++)
            {
                if(model.getValueAt(j, i)!= null)
                {
                    int ta2=model.getValueAt(j, i).toString().length()*7;
                    if(ta2>ta)
                        ta=ta2;
                }modelcol.getColumn(i).setPreferredWidth(ta);
            }
        }
        
    }
    
    public ArrayList<user> userList(){
        
        ArrayList<user> usersList = new ArrayList<>();
        //user User;
        try
	{
            Class.forName("com.mysql.jdbc.Driver");
            Connection con=DriverManager.getConnection("jdbc:mysql://118.185.43.122/library","0537cs161006","archit");
            Statement pit=con.createStatement();
            String qry="select * from " +  aa + "_lib where l_code= '" + bb +"';";
            System.out.println(qry);
                //JOptionPane.showMessageDialog(null, pst);
            ResultSet res= pit.executeQuery(qry);
             
                while(res.next())
                {
                     
                    //lbcheck.setForeground(new java.awt.Color(255, 51, 51));
                    //lbcheck.setText("book no. not available");
                    String qw = res.getString(2);
                    Statement pit1=con.createStatement();
                    String qry1="select * from " +  aa + "_book where b_no= '" + qw +"'";
                    ResultSet res1= pit1.executeQuery(qry1);
                    if (res1.next())
                    {
                        user User = new user(res.getString("bb_no"),res1.getString("b_name"),res1.getString("b_writter"),res1.getInt("b_edition"),res1.getString("b_publi"),res.getDate("issue_date"),res.getDate("ret_date"),res.getInt("fine"));
                        usersList.add(User);
                    }
                                                        
                }

            }

            catch(HeadlessException | ClassNotFoundException | SQLException except) { }
            return usersList;
    }
     
      public void show_user(){
        ArrayList<user> list = userList();
        DefaultTableModel mode1 = (DefaultTableModel)tb1.getModel();
        Object[] row = new Object[8];
        for(int i=0;i<list.size();i++)
        {
            row[0] = list.get(i).getsno() ;
            row[1] = list.get(i).getsname();
            row[2] = list.get(i).getswriter() ;
            row[3] = list.get(i).getsedition() ;
            row[4] = list.get(i).getspubli() ;
            row[5] = list.get(i).getsisue() ;
            row[6] = list.get(i).getsreturn() ;
            row[7] = list.get(i).getfine() ;
            mode1.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        tb1 = new javax.swing.JTable();
        b1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tb1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Book_id", "Name", "Writter", "Edition", "Publication", "Issue Date", "Return_Date", "Fine"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tb1);

        b1.setText("Save as Pdf");
        b1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                b1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(b1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(b1)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void b1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_b1ActionPerformed
        // TODO add your handling code here:
        String path="";
        JFileChooser j=new JFileChooser();
        j.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        int x=j.showSaveDialog(this);
        
        if(x==JFileChooser.APPROVE_OPTION)
        {
            path=j.getSelectedFile().getPath();
        }
        //Document doc = new Document();
        Document doc = new Document();
        
        try {
            PdfWriter.getInstance(doc,new FileOutputStream(path+"abc.pdf"));
            
            doc.open();
            PdfPTable tb11=new PdfPTable(8);
            
            tb11.addCell("Book_id");
            tb11.addCell("Book Name");
            tb11.addCell("Writter");
            tb11.addCell("Edition");
            tb11.addCell("Publication");
            tb11.addCell("Issue");
            tb11.addCell("Return");
            tb11.addCell("Fine");
            
            for(int i=0; i<tb1.getRowCount();i++)
            {
                String id1 =(String) tb1.getValueAt(i, 0);
                String name1 =(String) tb1.getValueAt(i, 1);
                String writter1 =(String) tb1.getValueAt(i, 2);
                String Edi1 =(String) tb1.getValueAt(i, 3);
                String puble1 =(String) tb1.getValueAt(i, 4);
                String iss1 =(String) tb1.getValueAt(i, 5);
                String ret1 =(String) tb1.getValueAt(i, 6);
                String fin1 =(String) tb1.getValueAt(i, 7);
                
                tb11.addCell(id1);
                 tb11.addCell(name1);
                  tb11.addCell(writter1);
                   tb11.addCell(Edi1);
                    tb11.addCell(puble1);
                     tb11.addCell(iss1);
                      tb11.addCell(ret1);
                       tb11.addCell(fin1);
                     
                  
            }
            doc.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(books.class.getName()).log(Level.SEVERE, null, ex);
        } catch (DocumentException ex) {
            Logger.getLogger(books.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_b1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(books.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                String aaa = "archit",bbb="123";
                new books(aaa,bbb).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton b1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tb1;
    // End of variables declaration//GEN-END:variables
}
